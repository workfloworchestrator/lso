[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core >=3.2,<4"]

[project]
name = "orchestrator-lso"
dynamic = ['version', 'description']
authors = [{name = "GÃ‰ANT Orchestration and Automation Team", email = "goat@geant.org"}]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "ansible-runner~=2.3.4",
    "ansible~=9.3.0",
    "fastapi~=0.110.0",
    "httpx~=0.27.0",
    "jsonschema~=4.21.1",
    "uvicorn[standard]~=0.28.0",
    "requests~=2.31.0"
]

readme = "README.md"
requires-python = ">=3.11,<3.13"

[project.urls]
Documentation = "https://workfloworchestrator.org/lso/"
Source = "https://github.com/workfloworchestrator/lso"

[project.optional-dependencies]
test = [
    "pytest",
    "Faker",
    "responses",
    "mypy",
    "ruff",
    "jsonschema",
    "starlette",
]

doc = [
    "sphinx",
    "sphinx-rtd-theme",
    "docutils",
]

dev = [
    "types-setuptools",
    "types-requests",
    "toml",
    "types-toml",
    "mypy_extensions",
    "pre-commit",
]

[tool.flit.module]
name = "lso"

[tool.mypy]
exclude = [
    "venv",
    "test/*",
    "docs"
]
ignore_missing_imports = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
namespace_packages = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_no_return = true
warn_unreachable = true
implicit_reexport = false
strict_equality = true
show_error_codes = true
show_column_numbers = true
# Suppress "note: By default the bodies of untyped functions are not checked"
disable_error_code = "annotation-unchecked"
# Forbid the use of a generic "type: ignore" without specifying the exact error that's ignored
enable_error_code = "ignore-without-code"

[tool.ruff]
extend-exclude = ["docs"]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
ignore = [
    "COM812",
    "D203",
    "D213",
    "N805",
    "PLR0913",
    "PLR0904",
    "PLW1514",
    "S104"
]
select = [
    "A",
    "ARG",
    "B",
    "BLE",
    "C",
    "COM",
    "C4",
    "C90",
    "D",
    "DTZ",
    "E",
    "EM",
    "ERA",
    "F",
    "FA",
    "FBT",
    "FLY",
    "FURB",
    "G",
    "I",
    "ICN",
    "INP",
    "ISC",
    "LOG",
    "N",
    "PERF",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "Q",
    "RET",
    "R",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "SLF",
    "T",
    "T20",
    "TID",
    "TRY",
    "UP",
    "W",
    "YTT"
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"test/*" = ["D", "S101"]
"setup.py" = ["D100"]

[tool.ruff.lint.isort]
known-third-party = []
known-first-party = ["test", "docs"]
